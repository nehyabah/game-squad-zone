name: 🌟 Full Stack - Complete Azure Deployment

on:
  # push:
  #   branches: [main]
  workflow_dispatch:
    inputs:
      deploy_backend:
        description: 'Deploy Backend'
        required: true
        default: true
        type: boolean
      deploy_frontend:
        description: 'Deploy Frontend'  
        required: true
        default: true
        type: boolean
      run_migrations:
        description: 'Run Database Migrations'
        required: true
        default: true
        type: boolean

env:
  NODE_VERSION: '18'

jobs:
  # Check what changed to determine what to deploy
  changes:
    name: 🔍 Detect Changes
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.changes.outputs.backend }}
      frontend: ${{ steps.changes.outputs.frontend }}
      workflows: ${{ steps.changes.outputs.workflows }}
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: 🔍 Detect changes
      uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          backend:
            - 'backend/**'
          frontend:
            - 'src/**'
            - 'public/**'
            - 'package.json'
            - 'package-lock.json'
            - 'vite.config.ts'
            - 'index.html'
          workflows:
            - '.github/workflows/**'

  # Deploy Backend
  deploy-backend:
    name: 🚀 Deploy Backend
    needs: changes
    if: |
      github.event_name == 'workflow_dispatch' && github.event.inputs.deploy_backend == 'true' ||
      github.event_name == 'push' && (needs.changes.outputs.backend == 'true' || needs.changes.outputs.workflows == 'true')
    uses: ./.github/workflows/backend-azure.yml
    secrets: inherit

  # Deploy Frontend
  deploy-frontend:
    name: 🎨 Deploy Frontend
    needs: changes
    if: |
      github.event_name == 'workflow_dispatch' && github.event.inputs.deploy_frontend == 'true' ||
      github.event_name == 'push' && (needs.changes.outputs.frontend == 'true' || needs.changes.outputs.workflows == 'true')
    uses: ./.github/workflows/frontend-azure.yml
    secrets: inherit

  # Integration Tests
  integration-tests:
    name: 🧪 Run Integration Tests
    needs: [deploy-backend, deploy-frontend]
    if: always() && (needs.deploy-backend.result == 'success' || needs.deploy-frontend.result == 'success')
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
    
    - name: 🧪 Test Backend Health
      run: |
        echo "🩺 Testing backend health..."
        for i in {1..3}; do
          if curl -f --max-time 30 "https://squadpot-backend.azurewebsites.net/health"; then
            echo "✅ Backend is healthy!"
            break
          else
            echo "⚠️ Backend health check attempt $i failed, retrying..."
            sleep 10
          fi
        done
    
    - name: 🧪 Test Frontend Health
      run: |
        echo "🩺 Testing frontend health..."
        for i in {1..3}; do
          if curl -f --max-time 30 "https://your-static-web-app.azurestaticapps.net" | grep -q "html"; then
            echo "✅ Frontend is healthy!"
            break
          else
            echo "⚠️ Frontend health check attempt $i failed, retrying..."
            sleep 10
          fi
        done
    
    - name: 🔗 Test Backend-Frontend Integration
      run: |
        echo "🔗 Testing API connectivity..."
        # Test CORS and API endpoints
        curl -f --max-time 30 "https://squadpot-backend.azurewebsites.net/api/health" || echo "⚠️ API health endpoint not available"
        echo "✅ Integration tests completed"

  # Deployment Summary
  deployment-summary:
    name: 📊 Deployment Summary
    needs: [changes, deploy-backend, deploy-frontend, integration-tests]
    if: always()
    runs-on: ubuntu-latest
    
    steps:
    - name: 📊 Generate deployment summary
      run: |
        echo "## 🌟 Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "| Component | Status | Changes Detected |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|--------|------------------|" >> $GITHUB_STEP_SUMMARY
        
        # Backend status
        if [ "${{ needs.deploy-backend.result }}" == "success" ]; then
          echo "| 🚀 Backend | ✅ Deployed Successfully | ${{ needs.changes.outputs.backend }} |" >> $GITHUB_STEP_SUMMARY
        elif [ "${{ needs.deploy-backend.result }}" == "skipped" ]; then
          echo "| 🚀 Backend | ⏭️ Skipped (No Changes) | ${{ needs.changes.outputs.backend }} |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| 🚀 Backend | ❌ Failed | ${{ needs.changes.outputs.backend }} |" >> $GITHUB_STEP_SUMMARY
        fi
        
        # Frontend status  
        if [ "${{ needs.deploy-frontend.result }}" == "success" ]; then
          echo "| 🎨 Frontend | ✅ Deployed Successfully | ${{ needs.changes.outputs.frontend }} |" >> $GITHUB_STEP_SUMMARY
        elif [ "${{ needs.deploy-frontend.result }}" == "skipped" ]; then
          echo "| 🎨 Frontend | ⏭️ Skipped (No Changes) | ${{ needs.changes.outputs.frontend }} |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| 🎨 Frontend | ❌ Failed | ${{ needs.changes.outputs.frontend }} |" >> $GITHUB_STEP_SUMMARY
        fi
        
        # Integration tests status
        if [ "${{ needs.integration-tests.result }}" == "success" ]; then
          echo "| 🧪 Integration Tests | ✅ Passed |  |" >> $GITHUB_STEP_SUMMARY
        elif [ "${{ needs.integration-tests.result }}" == "skipped" ]; then
          echo "| 🧪 Integration Tests | ⏭️ Skipped |  |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| 🧪 Integration Tests | ❌ Failed |  |" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔗 Deployment URLs" >> $GITHUB_STEP_SUMMARY
        echo "- **Backend API**: https://squadpot-backend.azurewebsites.net" >> $GITHUB_STEP_SUMMARY
        echo "- **Frontend App**: https://your-static-web-app.azurestaticapps.net" >> $GITHUB_STEP_SUMMARY
        echo "- **API Health**: https://squadpot-backend.azurewebsites.net/health" >> $GITHUB_STEP_SUMMARY
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📋 Next Steps" >> $GITHUB_STEP_SUMMARY
        echo "1. Verify applications are running correctly" >> $GITHUB_STEP_SUMMARY
        echo "2. Run manual smoke tests if needed" >> $GITHUB_STEP_SUMMARY
        echo "3. Monitor application logs for any issues" >> $GITHUB_STEP_SUMMARY